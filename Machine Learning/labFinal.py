# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1j4qabtBL5lAdyiZGk7ckBt_rBQMqtbfV
"""

import numpy as np
import matplotlib.pyplot as plt

class LinearRegression:
  def __init__(self,iter,lr=0.05):
    self.w=None
    self.b=None
    self.lr=lr
    self.iter=iter

  def fit(self,x,y):
    n=x.size
    f=1
    self.w=np.zeros(n)
    self.b=0

    for i in range(n):
    
      py= np.dot(x, self.w) + self.b
      dw = (1 / n) * np.dot(x.T, (py - y))
      db = (1 / n) * np.sum(py - y)
      self.w -= self.lr * dw
      self.b -= self.lr * db

  def predict(self,x):
    return np.dot(self.w,x)+self.b

      




x=[45,45,75,80,95,100,135,140,185,190]
y=[18,21,15,18,23,26,22,27,25,28]
x=np.array(x)
y=np.array(y)

lr=LinearRegression(10,0.05)
lr.fit(x,y)
print()
print()
print()
print()
print()
print()
print("slope: ",np.sum(lr.w)/x.size)
print("Intercept: ",lr.b)

predy=lr.predict(x)

plt.scatter(x,y)
plt.show()